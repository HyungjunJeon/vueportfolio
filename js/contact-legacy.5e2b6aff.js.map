{"version":3,"file":"js/contact-legacy.5e2b6aff.js","mappings":"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","sources":["webpack://vueportfolio/./src/views/Contact.vue","webpack://vueportfolio/./node_modules/emailjs-com/es/store/store.js","webpack://vueportfolio/./node_modules/emailjs-com/es/methods/init/init.js","webpack://vueportfolio/./node_modules/emailjs-com/es/utils/validateParams.js","webpack://vueportfolio/./node_modules/emailjs-com/es/models/EmailJSResponseStatus.js","webpack://vueportfolio/./node_modules/emailjs-com/es/api/sendPost.js","webpack://vueportfolio/./node_modules/emailjs-com/es/methods/send/send.js","webpack://vueportfolio/./node_modules/emailjs-com/es/methods/sendForm/sendForm.js","webpack://vueportfolio/./node_modules/emailjs-com/es/index.js","webpack://vueportfolio/./src/views/Contact.vue?af8e"],"sourcesContent":["<template>\n  <h2 class=\"title\">Contact Me</h2>\n  <div class=\"container\">\n    <form ref=\"form\" @submit.prevent=\"sendEmail\">\n      <label>성함 (기업명)</label>\n      <input type=\"text\" name=\"user_name\" />\n      <label>이메일 주소</label>\n      <input type=\"email\" name=\"user_email\" />\n      <label>메시지</label>\n      <textarea rows=\"15\" name=\"message\"></textarea>\n      <input type=\"submit\" value=\"보내기\" />\n    </form>\n  </div>\n</template>\n\n<script>\nimport emailjs from \"emailjs-com\"\nexport default {\n  name: \"Contact\",\n  methods: {\n    sendEmail() {\n      emailjs\n        .sendForm(\n          \"service_ma1g7xd\",\n          \"template_eiwnhgp\",\n          this.$refs.form,\n          \"user_LjIVfwge9KwhEDn2lqxri\"\n        )\n        .then(\n          (result) => {\n            console.log(\"SUCCESS!\", result.text)\n            alert(\"메일이 성공적으로 전송되었습니다\")\n          },\n          (error) => {\n            console.log(\"FAILED...\", error.text)\n            alert(\"메일 전송이 실패하였습니다\")\n          }\n        )\n    },\n  },\n}\n</script>\n\n<style scope>\nh2.title {\n  text-align: center;\n  margin-bottom: 20px;\n  font-size: 2.5rem;\n}\nform {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 50%;\n}\ninput,\ntextarea {\n  border: 1px solid #000000;\n  width: 100%;\n  margin: 10px 0;\n}\n\nlabel {\n  align-self: flex-start;\n  font-weight: bold;\n}\ninput[type=\"text\"],\ninput[type=\"email\"] {\n  height: 40px;\n  padding: 0 10px;\n}\ntextarea {\n  padding: 10px;\n}\ninput[type=\"submit\"] {\n  border: none;\n  background: #9e9e9e;\n  border-radius: 10px;\n  height: 60px;\n  font-weight: bold;\n}\n\n@media screen and (max-width: 768px) {\n  h2.title {\n    font-size: 1.25rem;\n  }\n\n  form {\n    width: 80%;\n  }\n}\n</style>\n","export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","import { store } from '../../store/store';\n/**\n * Initiation\n * @param {string} userID - set the EmailJS user ID\n * @param {string} origin - set the EmailJS origin\n */\nexport const init = (userID, origin = 'https://api.emailjs.com') => {\n    store._userID = userID;\n    store._origin = origin;\n};\n","export const validateParams = (userID, serviceID, templateID) => {\n    if (!userID) {\n        throw 'The user ID is required. Visit https://dashboard.emailjs.com/admin/integration';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse.status;\n        this.text = httpResponse.responseText;\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templatePrams - the template params, what will be set to the EmailJS template\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = (serviceID, templateID, templatePrams, userID) => {\n    const uID = userID || store._userID;\n    validateParams(uID, serviceID, templateID);\n    const params = {\n        lib_version: '3.2.0',\n        user_id: uID,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templatePrams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, userID) => {\n    const uID = userID || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.2.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { render } from \"./Contact.vue?vue&type=template&id=734f9395\"\nimport script from \"./Contact.vue?vue&type=script&lang=js\"\nexport * from \"./Contact.vue?vue&type=script&lang=js\"\n\nimport \"./Contact.vue?vue&type=style&index=0&id=734f9395&scope=true&lang=css\"\n\nimport exportComponent from \"/home/ubuntuhj/projects/vue/vueportfolio/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","type","name","rows","value","ref","sendEmail","store","_origin","init","userID","origin","_userID","validateParams","serviceID","templateID","EmailJSResponseStatus","constructor","httpResponse","this","status","text","responseText","sendPost","url","data","headers","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","target","responseStatus","open","Object","keys","forEach","key","setRequestHeader","send","templatePrams","uID","params","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","findHTMLForm","form","currentForm","document","querySelector","nodeName","sendForm","formData","FormData","append","methods","$refs","then","result","console","log","alert","error","__exports__","render"],"sourceRoot":""}